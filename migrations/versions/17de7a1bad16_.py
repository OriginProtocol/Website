"""empty message

Revision ID: 17de7a1bad16
Revises: bbf13d065442
Create Date: 2023-04-21 00:18:06.044764

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '17de7a1bad16'
down_revision = 'bbf13d065442'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('bitcoin_prices')
    # op.drop_table('tmp_import')
    # op.drop_table('localeth_event_topics')
    # op.drop_table('localeth_offers')
    # op.drop_table('localeth_event_logs')
    # op.drop_table('telegram_messages')
    # op.drop_table('tmp_identity')
    # op.drop_table('purse_item')
    # op.drop_table('purse_offer')
    # op.drop_table('telegram_chats')
    # op.drop_table('purse_offer_items')
    # op.drop_table('telegram_message_hides')
    # op.drop_table('tmp_eth_contact')
    # op.drop_table('localeth_payment_methods')
    # op.drop_table('telegram_user_bans')
    # op.drop_index('amount', table_name='paxful')
    # op.drop_index('payment_method_currency', table_name='paxful')
    # op.drop_index('payment_method_currency_type', table_name='paxful')
    # op.drop_index('trade_dt', table_name='paxful')
    # op.drop_table('paxful')
    # op.drop_table('telegram_users')
    # op.drop_index('ix_social_stat_name', table_name='social_stat_hourly')
    # op.drop_index('subscribed_count_ndx', table_name='social_stat_hourly')
    # op.drop_index('timestamp_and_count', table_name='social_stat_hourly')
    # op.drop_index('timestamp_ndx', table_name='social_stat_hourly')
    # op.drop_table('social_stat_hourly')
    # op.drop_index('ix_circulating_supply_snapshot_date', table_name='circulating_ogn_supply')
    op.add_column('email_list', sa.Column('source', sa.String(length=255), nullable=True))
    op.create_index(op.f('ix_email_list_source'), 'email_list', ['source'], unique=False)
    # op.drop_index('ix_tokens', table_name='eth_contact')
    # op.drop_index('ix_message_log_email_and_msg_purpose', table_name='message_log')
    # op.drop_index('name_index', table_name='social_stat')
    # op.drop_index('subscribed_count_index', table_name='social_stat')
    # op.drop_index('timestamp_and_name_index', table_name='social_stat')
    # op.drop_index('timestamp_index', table_name='social_stat')
    # op.create_index(op.f('ix_social_stat_name'), 'social_stat', ['name'], unique=False)
    # op.drop_index('ix_token_info_created_at', table_name='token_info')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_token_info_created_at', 'token_info', ['created_at'], unique=False)
    op.drop_index(op.f('ix_social_stat_name'), table_name='social_stat')
    op.create_index('timestamp_index', 'social_stat', ['timestamp'], unique=False)
    op.create_index('timestamp_and_name_index', 'social_stat', ['name', 'timestamp'], unique=False)
    op.create_index('subscribed_count_index', 'social_stat', ['subscribed_count'], unique=False)
    op.create_index('name_index', 'social_stat', ['name'], unique=False)
    op.create_index('ix_message_log_email_and_msg_purpose', 'message_log', ['email', 'msg_purpose'], unique=False)
    op.create_index('ix_tokens', 'eth_contact', ['tokens'], unique=False)
    op.drop_index(op.f('ix_email_list_source'), table_name='email_list')
    op.drop_column('email_list', 'source')
    op.create_index('ix_circulating_supply_snapshot_date', 'circulating_ogn_supply', ['snapshot_date'], unique=False)
    op.create_table('social_stat_hourly',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('subscribed_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='social_stat_pkey')
    )
    op.create_index('timestamp_ndx', 'social_stat_hourly', ['timestamp'], unique=False)
    op.create_index('timestamp_and_count', 'social_stat_hourly', ['timestamp', 'subscribed_count'], unique=False)
    op.create_index('subscribed_count_ndx', 'social_stat_hourly', ['subscribed_count'], unique=False)
    op.create_index('ix_social_stat_name', 'social_stat_hourly', ['name'], unique=False)
    op.create_table('telegram_users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('telegram_users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='telegram_users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('paxful',
    sa.Column('trade_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trade_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_method_group', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trade_ts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('trade_id', name='paxful_pkey')
    )
    op.create_index('trade_dt', 'paxful', ['trade_date'], unique=False)
    op.create_index('payment_method_currency_type', 'paxful', ['payment_method', 'currency', 'type'], unique=False)
    op.create_index('payment_method_currency', 'paxful', ['payment_method', 'currency'], unique=False)
    op.create_index('amount', 'paxful', ['amount'], unique=False)
    op.create_table('telegram_user_bans',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['telegram_users.id'], name='telegram_user_bans_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='telegram_user_bans_pkey')
    )
    op.create_table('localeth_payment_methods',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_window_in_minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description_for_buyer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_for_seller', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('local', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('geo_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('whitelist_country_codes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('popularity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='localeth_payment_methods_pkey')
    )
    op.create_table('tmp_eth_contact',
    sa.Column('address', sa.VARCHAR(length=42), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('eth_balance', postgresql.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True),
    sa.Column('ogn_balance', postgresql.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True),
    sa.Column('dai_balance', postgresql.DOUBLE_PRECISION(precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True),
    sa.Column('investor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('presale_interest', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('dapp_user', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('employee', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('exchange', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('company_wallet', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('desc', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('investor_airdrop', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('token_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tokens', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('transaction_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('country_code', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('address', name='tmp_eth_contact_pkey')
    )
    op.create_table('telegram_message_hides',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['telegram_users.id'], name='telegram_message_hides_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='telegram_message_hides_pkey')
    )
    op.create_table('purse_offer_items',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('asin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'asin', name='request_items_pkey')
    )
    op.create_table('telegram_chats',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='telegram_chats_pkey')
    )
    op.create_table('purse_offer',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('picture', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('spender_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('buyer_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('badges', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('score', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('transactions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reviews_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reviews_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reviews_3', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reviews_4', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reviews_5', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('user_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('service_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('smile', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('available_actions', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('unread_messages', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('exchange_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('exchange_rate_fixed', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('coin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('buyer_pays_fiat', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('buyer_gets_btc', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('buyer_gets_coin', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('shipping_country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='request_pkey')
    )
    op.create_table('purse_item',
    sa.Column('asin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('product_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_large', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_small', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_medium', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fiat_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tax', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shipping', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('delivered', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('in_stock', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('restock_date_string', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('offered_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('offered_by_amazon', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_prime', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_addon', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_downloadable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_giftable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_preorder', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('nyd', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('instant', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('purse_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('discount_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('asin', name='item_pkey')
    )
    op.create_table('tmp_identity',
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dapp_user', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('address', name='tmp_identity_pkey')
    )
    op.create_table('telegram_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('chat_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('language_code', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('english_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('polarity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('subjectivity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['telegram_users.id'], name='telegram_messages_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='telegram_messages_pkey')
    )
    op.create_table('localeth_event_logs',
    sa.Column('transactionhash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('topic0', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('topic1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('block', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('topic_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dt', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('dedupe', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('localeth_offers',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('account_intro', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('account_username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_ascii_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_country_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_country_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('city_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_short_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_slug', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('headline', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('likely_to_respond_fast_badge', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('local_currency_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location_formatted_address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('outside_of_standard_hours', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('payment_method_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('price_amount_including_taker_fee', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reputation_created_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reputation_percent_feedback_good', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reputation_trade_count', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reputation_trade_volume', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('require_phone_number_verification', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('search_distance_km', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_hours', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_hours', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('terms_of_trade', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('trades', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eth_volume', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reputation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('limits_max', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('limits_min', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='localeth_offers_pkey')
    )
    op.create_table('localeth_event_topics',
    sa.Column('hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('hash', name='localeth_event_topics_pkey')
    )
    op.create_table('tmp_import',
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('investor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('address', name='tmp_import_pkey')
    )
    op.create_table('bitcoin_prices',
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('open', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('high', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('low', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('close', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('adj_close', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('date', name='bitcoin_prices_pkey')
    )
    # ### end Alembic commands ###
